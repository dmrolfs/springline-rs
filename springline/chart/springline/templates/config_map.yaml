apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.name" . }}-config
  labels:
{{ include "common.labels" . | indent 4 }}
  annotations:
{{ include "common.annotations" . | indent 4 }}
data:
  decision_basis: |
{{ .Files.Get "env/decision_basis.polar" | indent 4 }}
  config: |
    ---
    flink:
      job_manager_host: {{ include "pipeline.jobName" . }}{{ .Values.global.convention.jobManagerSuffix }}{{ .Values.global.convention.serviceSuffix }}.{{ .Release.Namespace }}.svc.cluster.local
    kubernetes:
      namespace: {{ .Release.Namespace }}
    decision:
      policies:
        - source: file
          policy:
            path: "./resources/decision.polar"
            is_template: true
        - source: file
          policy:
            path: "/opt/springline/resources/chart_decision_basis.polar"
            is_template: true
      template_data:
        basis: chart_decision_basis
        max_healthy_cpu_load: 10.0016
        min_healthy_cpu_load: 5.0012
    plan:
      performance_repository:
        storage: memory
    action:
      taskmanager:
        # temp hard code until we can directly embed autoscaler into runtime ns
        label_selector: "component=taskmanager,release={{ include "pipeline.jobName" . }}"
        deploy_resource: {{ default "statefulset" .Values.deployment.taskManagerDeployment }}/{{ include "pipeline.jobName" . }}{{ .Values.global.convention.taskManagerSuffix }}
        kubernetes_api:
          api_timeout_secs: {{ .Values.application.action.taskmanager.kubernetes_api.api_timeout_secs }}
#        label_selector: "component=taskmanager,release={{ include "common.name" . }}"
#        deploy_resource: statefulset/{{ include "common.name" . }}-tm
#        max_healthy_heap_memory_load: f64
#        max_healthy_network_io_utilization: f64
#        max_healthy_lag: 133.0
#        min_healthy_lag: 0.0
#    eligibility:
#      template_data:
#        cooling_secs:
#      min_scaling_step:
#      restart:
#        secs:
#        nanos:
#      max_catch_up:
#        secs:
#        nanos:
#      recovery_valid:
#        secs:
#        nanos:
#    governance:
#      rules:
#        min_cluster_size: 0
#        max_cluster_size: 20
#        min_scaling_step: 1
#        max_scaling_step: 4
